version: v1.0
name: Publish release
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
global_job_config:
  prologue:
    commands:
      - sem-version python 3.8
      - checkout
      - python -m pip install -U pip poetry
blocks:
  - name: Create release
    task:
      jobs:
        - name: Collect package details
          commands:
            - RELEASE_VERSION=$(python -m poetry version -s)
            - 'PACKAGE_NAME=$(python -m poetry version | awk ''{print $1}'')'
            - 'RELEASE_NOTES_FILE="release-notes/${RELEASE_VERSION}.md"'
            - 'if [ ! -f "$RELEASE_NOTES_FILE" ]; then echo "The release notes file \"${RELEASE_NOTES_FILE}\" does not exist."; exit 1; fi'
            - RELEASE_TYPE="release"
            - 'if [[ $RELEASE_VERSION =~ \.[0-9]+(a|b|rc)[0-9] ]]; then RELEASE_TYPE="prerelease"; fi'
            - echo "PYPI_PACKAGE_NAME=$PACKAGE_NAME" >> pypi.env
            - echo "PYPI_RELEASE_VERSION=$RELEASE_VERSION" >> pypi.env
            - echo "PYPI_RELEASE_TYPE=$RELEASE_TYPE" >> pypi.env
            - echo "PYPI_RELEASE_NOTES_FILE=$RELEASE_NOTES_FILE" >> pypi.env
            - 'echo "Package details:"'
            - cat pypi.env
            - artifact push project pypi.env --force
  - name: Create new release
    task:
      secrets:
        - name: semantic-release-credentials
      jobs:
        - name: Create release
          commands:
            - artifact pull project pypi.env --force
            - cat pypi.env
            - source pypi.env
            - 'if [[ $PYPI_RELEASE_TYPE == "prerelease" ]]; then prerelease="--prerelease"; fi'
            - gh release create $PYPI_RELEASE_VERSION --notes-file $PYPI_RELEASE_NOTES_FILE $prerelease
            - artifact yank project pypi.env
  - name: Publish
    task:
      jobs:
        - name: Build and upload
          commands:
            - poetry build -f wheel
            - poetry publish --dry-run
